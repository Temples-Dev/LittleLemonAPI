 def get(self, request, orderId=None):
        # Get the current user
        current_user = request.user
        
        # Retrieve all order items created by the current user
        order_items = OrderItem.objects.filter(user=current_user)
        
        # Serialize the order items
        serializer = OrderItemSerializer(order_items, many=True)
        
        # Return the serialized order items in the response
        return Response(serializer.data, status=status.HTTP_200_OK)
    
    
    def post(self, request, orderId=None):
        # Get the current user
        current_user = request.user
        print("Current User: ",current_user)
        
        # Get the current cart items for the user
        cart_items = Cart.objects.filter(user=current_user)
        
        # Create order items for each cart item
        order_items_data = []
        for cart_item in cart_items:
            order_items_data.append({
                'order': current_user.id,
                'menuitem': cart_item.menuitem.id,
                'quantity': cart_item.quantity,
                'price': cart_item.price,
                'unitprice': cart_item.unitprice,
            })
        
        # Create serializer instance with the data
        order_serializer = OrderItemSerializer(data=order_items_data, many=True)
        
        if order_serializer.is_valid(raise_exception=True):
            # Save order items to the database
            order_serializer.save()
            
            # Delete all items from the cart for this user
            # cart_items.delete()
            
            return Response({'message': 'Order created successfully.'}, status=status.HTTP_201_CREATED)
        else:
            return Response(order_serializer.errors, status=status.HTTP_400_BAD_REQUEST)
        
    
        

